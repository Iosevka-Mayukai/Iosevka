$$include '../../../meta/macros.ptl'

import [mix linreg clamp fallback] from '../../../support/utils'
import [DesignParameters] from '../../../meta/aesthetics'
import [Dotless CvDecompose] from "../../../support/gr"

glyph-module

glyph-block Letter-Latin-Lower-U : begin
	glyph-block-import CommonShapes
	glyph-block-import Common-Derivatives
	glyph-block-import Marks : markHalfStroke
	glyph-block-import Letter-Shared-Shapes : RightwardTailedBar nShoulder

	define [UTopLeftSerif yTop]  : tagged 'serifLT'
		LeftwardTopSerif SB yTop SideJut
	define [UTopRightSerif yTop] : tagged 'serifRT'
		LeftwardTopSerif (RightSB - Stroke * HVContrast) yTop SideJut
	define [UBottomRightSerif yTop] : tagged 'serifRB'
		RightwardBottomSerif RightSB 0 SideJut

	create-glyph : glyph-proc
		include : MarkSet.e
		set-base-anchor 'trailing' (RightSB - markHalfStroke) 0
		include : nShoulder
			left -- (SB + Stroke * HVContrast)
			right -- RightSB
			fine -- ShoulderFine
		include : FlipAround Middle (XH / 2)

		create-derived 'u.toothed' : glyph-proc
			include : VBarRight RightSB 0 XH
			if SLAB : begin
				include : UTopLeftSerif XH
				if [not para.isItalic] : include : UTopRightSerif XH
				include : UBottomRightSerif XH

		create-derived 'u.tailed' : glyph-proc
			include : RightwardTailedBar RightSB 0 XH
			if SLAB : begin
				include : UTopLeftSerif XH
				if [not para.isItalic] : include : UTopRightSerif XH

		create-derived 'u.motionSerifed' : glyph-proc
			include : VBarRight RightSB 0 XH
			include : UTopLeftSerif XH
			include : UBottomRightSerif XH

		create-derived 'u.motionSerifedTailed' : glyph-proc
			include : RightwardTailedBar RightSB 0 XH
			include : UTopLeftSerif XH

	create-glyph 'grek/upsilon' 0x3C5 : glyph-proc
		include : MarkSet.e
		set-base-anchor 'trailing' Middle 0
		include : dispiro
			widths.lhs
			flat (SB + OX - O) XH [heading Downward]
			curl (SB + OX - O) SmallSmoothB
			arcvh
			g4   (Middle + CorrectionOMidS) O
			archv
			flat (RightSB - OX + O) SmallSmoothA
			curl (RightSB - OX + O) XH [heading Upward]

	create-glyph 'u.toothlessCorner' : glyph-proc
		include : MarkSet.e
		set-base-anchor 'trailing' Middle 0
		include [refer-glyph 'n.earlessCornerStraight']
		eject-contour 'serifLT'
		eject-contour 'serifLB'
		eject-contour 'serifRB'
		include : FlipAround Middle (XH / 2)
		if SLAB : begin
			include : UTopLeftSerif XH
			include : UTopRightSerif XH

	create-glyph 'u.toothlessRounded' : glyph-proc
		include [refer-glyph 'grek/upsilon'] AS_BASE ALSO_METRICS
		if SLAB : begin
			include : UTopLeftSerif XH
			include : UTopRightSerif XH

	select-variant 'u' 'u'
	create-glyph 'urtailBR' 0x1D99 : glyph-proc
		include [refer-glyph 'u.toothed'] AS_BASE ALSO_METRICS
		include [refer-glyph 'rtailBR']

	define [LatinUpsilon2Shape top sma smb] : glyph-proc
		include : dispiro
			widths.lhs
			flat SB top [heading Downward]
			curl SB smb
			arcvh
			g4 (Middle + CorrectionOMidS) O
			archv
			flat RightSB sma
			curl RightSB (top - Hook - HalfStroke) [heading Upward]
		include : VerticalHook (RightSB - HalfStroke * HVContrast) (top - Hook - HalfStroke) (-(RightSB - HalfStroke * HVContrast - Middle)) (-Hook)

	create-glyph 'latinUpsilon2' 0x1B2 : glyph-proc
		include : MarkSet.e
		include : LatinUpsilon2Shape CAP SmoothA SmoothB

	create-glyph 'latinupsilon2' 0x28B : glyph-proc
		include : MarkSet.e
		include : LatinUpsilon2Shape XH SmallSmoothA SmallSmoothB

	create-glyph 'uWithLightCentralizationStroke' : glyph-proc
		include : MarkSet.p
		include : refer-glyph "u.toothed"
		local fine      : AdviceStroke 4
		local outStand  : SB * 0.75 + fine * 0.25
		local outStandY : SmallSmoothB / 2 - Descender * 0.6
		local yTurn     : SmallSmoothB / 2
		include : difference
			dispiro
				widths.lhs fine
				corner (SB + outStand) (yTurn + outStandY)
				corner (SB - outStand) (yTurn - outStandY)
			spiro-outline
				corner (SB - O) XH
				curl (SB - O) SmallSmoothB
				arcvh
				g4   (Middle + CorrectionOMidS) (-O)
				archv
				flat (RightSB + O) SmallSmoothA
				corner (RightSB + O) XH
		if SLAB : begin
			include : LeftwardTopSerif SB XH SideJut

	create-glyph 'mathbb/u' 0x1D566 : glyph-proc
		local df : DivFrame 1 2
		include : df.markSet.e
		include [refer-glyph 'mathbb/n']
		include : FlipAround Middle (XH / 2)

$$include '../../../meta/macros.ptl'

import [mix barmixL linreg clamp fallback] from '../../../support/utils'
import [DesignParameters] from '../../../meta/aesthetics'

glyph-module

glyph-block Letter-Greek-Upper-Gamma: begin
	glyph-block-import CommonShapes
	glyph-block-import Common-Derivatives
	glyph-block-import Letter-Shared-Shapes : nShoulder
	glyph-block-import Letter-Blackboard : BBS BBD BBBarLeft

	define GammaBarLeft (SB * 1.5)
	define [GammaShape top] : glyph-proc
		include : VBarLeft GammaBarLeft 0 top
		include : HBarTop (GammaBarLeft - O) (RightSB - OX) top
		if SLAB : begin
			include : LeftwardTopSerif GammaBarLeft top SideJut
			include : LeftwardBottomSerif (GammaBarLeft + HVContrast * HalfStroke) 0 Jut
			include : RightwardBottomSerif (GammaBarLeft + HVContrast * HalfStroke) 0 MidJutSide
			include : tagged 'serifRT' : DownwardRightSerif (RightSB - OX) top VJut

	create-glyph 'grek/Gamma' 0x393 : glyph-proc
		include : MarkSet.capital
		include : GammaShape CAP

	create-glyph 'mathbb/grek/Gamma' 0x213E : glyph-proc
		include : MarkSet.capital
		include : BBBarLeft GammaBarLeft 0 CAP
		include : HBarTop GammaBarLeft RightSB CAP BBS

	alias 'cyrl/Ghe' 0x413 'grek/Gamma'

	create-glyph 'cyrl/GheHook' 0x494 : glyph-proc
		include [refer-glyph 'cyrl/Ghe'] AS_BASE ALSO_METRICS
		include : nShoulder
			left   -- (GammaBarLeft + Stroke)
			right  -- RightSB
			top    -- CAP * HBarPos + Stroke / 4
			bottom -- 0
			sma    -- SmoothA
			smb    -- SmoothB
		include : VerticalHook (RightSB - HalfStroke * HVContrast) 0 (-HookX) Hook

	create-glyph 'cyrl/ghe.upright' : glyph-proc
		include : MarkSet.e
		include : GammaShape XH

	create-glyph 'cyrl/gheHook' 0x495 : glyph-proc
		include [refer-glyph 'cyrl/ghe.upright'] AS_BASE ALSO_METRICS
		include : nShoulder
			left   -- (GammaBarLeft + Stroke)
			right  -- RightSB
			top    -- XH * HBarPos + Stroke / 4
			bottom -- 0
			sma    -- SmoothA * [Math.pow HBarPos 0.3]
			smb    -- SmoothB * [Math.pow HBarPos 0.3]
		include : VerticalHook (RightSB - HalfStroke * HVContrast) 0 (-HookX) Hook

	create-glyph 'cyrl/ghe.SRB' : glyph-proc
		include [refer-glyph 'dotlessi'] AS_BASE
		include : refer-glyph "macronAbove"

	orthographic-italic 'cyrl/ghe' 0x433

	define [CyrGeShape top] : glyph-proc
		include : GammaShape top
		eject-contour 'serifRT'
		include : VBarRight (RightSB - OX) top (top + Accent)

	create-glyph 'cyrl/Ge' 0x490 : glyph-proc
		include : MarkSet.capital
		include : CyrGeShape CAP

	create-glyph 'cyrl/ge.upright' : glyph-proc
		include : MarkSet.e
		include : CyrGeShape XH

	create-glyph 'cyrl/Ghayn' 0x492 : glyph-proc
		include [refer-glyph 'cyrl/Ghe'] AS_BASE
		include : HOverlayBar (SB * 0.3) [mix (SB + Stroke) (RightSB - Stroke) 0.55] (CAP * (1 - OverlayPos))

	create-glyph 'cyrl/ghayn.upright' : glyph-proc
		include [refer-glyph 'cyrl/ghe.upright'] AS_BASE
		include : HOverlayBar (SB * 0.3) [mix (SB + Stroke) (RightSB - Stroke) 0.55] (XH * (1 - OverlayPos))

	create-glyph 'cyrl/ghayn.italic' : glyph-proc
		include [refer-glyph 'cyrl/ghe.italic'] AS_BASE
		include : FlatSlashShape Middle (XH / 2) (OverlayStroke / 2) (-0.2) 0.75

	orthographic-italic 'cyrl/ge'    0x491
	orthographic-italic 'cyrl/ghayn' 0x493

	create-glyph 'cyrl/GheDescender' 0x4F6 : composite-proc
		refer-glyph 'cyrl/Ghe'
		CyrDescender (GammaBarLeft + Stroke * HVContrast) (sideJut -- MidJutCenter - HalfStroke * HVContrast)
		MarkSet.if

	create-glyph 'cyrl/gheDescender.upright' : composite-proc
		refer-glyph 'cyrl/ghe'
		CyrDescender (GammaBarLeft + Stroke * HVContrast) (sideJut -- MidJutCenter - HalfStroke * HVContrast)
		MarkSet.p

	orthographic-italic 'cyrl/gheDescender' 0x4F7

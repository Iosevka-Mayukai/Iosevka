$$include '../meta/macros.ptl'

import '../support/transform' as : Transform && [object [transformPoint tp]]
import [curveToContour OffsetCurve] from '../support/curve-util'
import [mix linreg clamp fallback] from '../support/utils'
import [designParameters] from '../meta/aesthetics'
import [Curve Quadify] from "typo-geom"

glyph-module

glyph-block Overmarks : begin

	glyph-block-import CommonShapes

	### Combining marks
	local markExtend (AccentX * 0.5)
	local markHalfStroke : 0.5 * [adviceBlackness2 3.5 3.375 XH]
	local markStress : markHalfStroke * 1.1
	local markFine : markHalfStroke * 0.9

	local markMiddle (-Middle)
	local markDotsRadius : DotRadius * [Math.min 1 (markStress / HalfStroke)]

	local aboveMarkTop (XH + Accent * 1.38)
	local aboveMarkBot (XH + Accent * 0.35)
	local aboveMarkMid [mix aboveMarkBot aboveMarkTop 0.5]

	local belowMarkBot (0 - Accent * 1.38)
	local belowMarkTop (0 - Accent * 0.35)

	local commaOvershoot  : O * [linreg 16 0 90 (-1) (markHalfStroke * 2)]
	local commaOvershoot2 : O * [linreg 16 1 90 (-1) (markHalfStroke * 2)]
	local commaAboveRadius : 0.85 * DotRadius * markHalfStroke / HalfStroke

	local asciiMarkZoom : (RightSB - SB) / (markExtend * 3)

	### Above marks
	sketch # dotAbove
		set-width 0
		currentGlyph.shortName = 'dot'
		set-anchor 'above' MARK markMiddle XH markMiddle aboveMarkTop
		include : Ring (XH + Accent + DotRadius) (XH + Accent - DotRadius) (markMiddle - DotRadius) (markMiddle + DotRadius) true

		save 'dotAbove' 0x307

	sketch # dieresisAbove
		set-width 0
		currentGlyph.shortName = 'dieresis'
		set-anchor 'above' MARK markMiddle XH markMiddle aboveMarkTop
		include : Ring (XH + Accent + markDotsRadius) (XH + Accent - markDotsRadius) (markMiddle - markDotsRadius - markExtend) (markMiddle + markDotsRadius - markExtend) true
		include : Ring (XH + Accent + markDotsRadius) (XH + Accent - markDotsRadius) (markMiddle - markDotsRadius + markExtend) (markMiddle + markDotsRadius + markExtend) true

		save 'dieresisAbove' 0x308

	sketch # ringAbove
		set-width 0
		currentGlyph.shortName = 'ring'
		set-anchor 'above' MARK markMiddle XH markMiddle aboveMarkTop

		local radiusIn  : Accent * 0.24
		local radiusOut : radiusIn + markFine * [linreg 16 2 90 1.75 (markHalfStroke * 2)]
		include : Ring (XH + Accent + radiusOut) (XH + Accent - radiusOut) (markMiddle - radiusOut) (markMiddle + radiusOut) true
		include : Ring (XH + Accent + radiusIn) (XH + Accent - radiusIn) (markMiddle - radiusIn) (markMiddle + radiusIn) true
		reverse-last
		apply-transform : Upright
		apply-transform : Translate 0 (-markFine * 0.75)
		apply-transform : Italify

		save 'ringAbove' 0x30A

		local g [branch]
		branch
			set currentGlyph.anchors {.}
			local k : 2 * (radiusOut - (radiusOut - radiusIn) * 0.25)
			apply-transform : Translate k 0
			include g
			include : Translate (-k / 2) 0
			set-anchor 'above' MARK markMiddle XH markMiddle aboveMarkTop
			save 'dblRingAbove' 0x1AB2

	sketch # graveAbove
		set-width 0
		currentGlyph.shortName = 'grave'
		set-anchor 'above' MARK markMiddle XH markMiddle aboveMarkTop

		include : dispiro
			flat (markMiddle + markStress) aboveMarkBot [widths markFine markFine]
			curl (markMiddle - markExtend) aboveMarkTop [widths markStress markStress]

		save 'graveAbove' 0x300

	sketch # asciigrave
		include : dispiro
			flat (Middle + HalfStroke * 1.1 * asciiMarkZoom) [mix (XH + Accent) aboveMarkBot asciiMarkZoom] [widths.center : Stroke * 0.9]
			curl (Middle - markExtend * asciiMarkZoom) [mix (XH + Accent) aboveMarkTop asciiMarkZoom] [widths.center : Stroke * 1.1]

		save 'asciigrave' '`'

	sketch # acuteAbove
		set-width 0
		currentGlyph.shortName = 'acute'
		set-anchor 'above' MARK markMiddle XH markMiddle aboveMarkTop

		include : dispiro
			flat (markMiddle - markStress) aboveMarkBot [widths markFine markFine]
			curl (markMiddle + markExtend) aboveMarkTop [widths markStress markStress]

		save 'acuteAbove' 0x301

	sketch # latin1acute
		include : dispiro
			flat (Middle - HalfStroke * 1.1 * asciiMarkZoom) [mix (XH + Accent) aboveMarkBot asciiMarkZoom] [widths.center : Stroke * 0.9]
			curl (Middle + markExtend * asciiMarkZoom) [mix (XH + Accent) aboveMarkTop asciiMarkZoom] [widths.center : Stroke * 1.1]

		save 'latin1acute' 0xB4

	sketch # circumflexAbove
		set-width 0
		currentGlyph.shortName = 'circum'
		set-anchor 'above' MARK markMiddle XH markMiddle aboveMarkTop

		include : dispiro
			flat (markMiddle - markExtend - markStress) (aboveMarkBot + markStress - markFine) [widths markStress markStress]
			curl markMiddle (aboveMarkTop + markFine * 0.7) [heading Upward]
		include : dispiro
			flat (markMiddle + markExtend + markStress) (aboveMarkBot + markStress - markFine) [widths markStress markStress]
			curl markMiddle (aboveMarkTop + markFine * 0.7) [heading Upward]
		save 'circumflexAbove' 0x302
	sketch # bardownAbove
		set-width 0
		set-anchor 'above' MARK markMiddle XH markMiddle aboveMarkTop
		include : dispiro
			widths.rhs (markHalfStroke * 2)
			flat (markMiddle - markExtend * 1.5) (aboveMarkTop + markFine * 0.7)
			curl (markMiddle + markStress * HVContrast) (aboveMarkTop + markFine * 0.7)
		include : dispiro
			flat (markMiddle + markExtend + markStress) (aboveMarkBot + markStress - markFine) [widths markStress markStress]
			curl markMiddle (aboveMarkTop + markFine * 0.7) [heading Upward]
		save 'bardownAbove' 0x1DC6
	sketch # upbarAbove
		set-width 0
		set-anchor 'above' MARK markMiddle XH markMiddle aboveMarkTop

		include : dispiro
			flat (markMiddle - markExtend - markStress) (aboveMarkBot + markStress - markFine) [widths markStress markStress]
			curl markMiddle (aboveMarkTop + markFine * 0.7) [heading Upward]
		include : dispiro
			widths.rhs (markHalfStroke * 2)
			flat (markMiddle - markStress * HVContrast) (aboveMarkTop + markFine * 0.7)
			curl (markMiddle + markExtend * 1.5) (aboveMarkTop + markFine * 0.7)
		save 'upbarAbove' 0x1DC7

	sketch # asciicaret
		include : dispiro
			flat (Middle - markExtend * asciiMarkZoom - HalfStroke) ([mix (XH + Accent) aboveMarkBot asciiMarkZoom] + HalfStroke * 0.1) [widths.center : Stroke * 1.05]
			curl Middle ([mix (XH + Accent) aboveMarkTop asciiMarkZoom] + HalfStroke * 0.5) [heading Upward]
		include : dispiro
			flat (Middle + markExtend * asciiMarkZoom + HalfStroke) ([mix (XH + Accent) aboveMarkBot asciiMarkZoom] + HalfStroke * 0.1) [widths.center : Stroke * 1.05]
			curl Middle ([mix (XH + Accent) aboveMarkTop asciiMarkZoom] + HalfStroke * 0.5) [heading Upward]
		save 'asciicaret.high'

	sketch # caronAbove
		set-width 0
		currentGlyph.shortName = 'caron'
		set-anchor 'above' MARK markMiddle XH markMiddle aboveMarkTop

		include : dispiro
			flat (markMiddle - markExtend - markStress) aboveMarkTop [widths markStress markStress]
			curl markMiddle (aboveMarkBot - markFine * 1.7 + markStress) [heading Downward]
		include : dispiro
			flat (markMiddle + markExtend + markStress) aboveMarkTop [widths markStress markStress]
			curl markMiddle (aboveMarkBot - markFine * 1.7 + markStress) [heading Downward]
		save 'caronAbove' 0x30c
	sketch # barupAbove
		set-width 0
		set-anchor 'above' MARK markMiddle XH markMiddle aboveMarkTop
		include : dispiro
			widths.lhs (markHalfStroke * 2)
			flat (markMiddle - markExtend * 1.5) (aboveMarkBot - markFine * 1.7 + markStress)
			curl (markMiddle + markStress * HVContrast) (aboveMarkBot - markFine * 1.7 + markStress)
		include : dispiro
			flat (markMiddle + markExtend + markStress) aboveMarkTop [widths markStress markStress]
			curl markMiddle (aboveMarkBot - markFine * 1.7 + markStress) [heading Downward]
		save 'barupAbove' 0x1DC4
	sketch # downbarAbove
		set-width 0
		set-anchor 'above' MARK markMiddle XH markMiddle aboveMarkTop
		include : dispiro
			flat (markMiddle - markExtend - markStress) aboveMarkTop [widths markStress markStress]
			curl markMiddle (aboveMarkBot - markFine * 1.7 + markStress) [heading Downward]
		include : dispiro
			widths.lhs (markHalfStroke * 2)
			flat (markMiddle - markStress * HVContrast) (aboveMarkBot - markFine * 1.7 + markStress)
			curl (markMiddle + markExtend * 1.5) (aboveMarkBot - markFine * 1.7 + markStress)
		save 'downbarAbove' 0x1DC5

	define [TildeShape] : params [ttop tbot leftEnd rightEnd hs] : glyph-construction
		local fine : hs * 8 / 9
		local hsvh : hs * 2 / [Math.abs (ttop - tbot)]
		local hvc : (rightEnd - leftEnd) / [Math.abs (ttop - tbot)]
		local defaultHvc : markExtend * 3 / (aboveMarkTop - aboveMarkBot - markFine / 2)

		local hsvhThin 0.116
		local hsvhHeav 0.732
		local tildeWave : [linreg hsvhThin 2.925 hsvhHeav 2.375 hsvh] * [linreg defaultHvc 1 4.35 1.1 hvc]
		local tildeWaveX 0.51

		define z1 : tp currentGlyph.gizmo : object [x leftEnd] [y tbot]
		define z2 : tp currentGlyph.gizmo : object [x : mix leftEnd rightEnd tildeWaveX] [y : mix tbot ttop tildeWave]
		define z3 : tp currentGlyph.gizmo : object [x : mix leftEnd rightEnd (1 - tildeWaveX)] [y : mix tbot ttop (1 - tildeWave)]
		define z4 : tp currentGlyph.gizmo : object [x rightEnd] [y ttop]
		define bone : new Curve.Bez3 z1 z2 z3 z4

		define inner : curveToContour [new OffsetCurve bone (+hs) HVContrast] 32
		define outer : curveToContour [new OffsetCurve bone (-hs) HVContrast] 32

		currentGlyph.contours.push : inner.concat [outer.reverse]

	sketch # tildeAbove
		set-width 0
		currentGlyph.shortName = 'tilde'
		set-anchor 'above' MARK markMiddle XH markMiddle aboveMarkTop
		include : TildeShape
			ttop -- aboveMarkTop
			tbot -- aboveMarkBot + markFine / 2
			leftEnd -- (markMiddle - markExtend * 1.5)
			rightEnd -- (markMiddle + markExtend * 1.5)
			hs -- markHalfStroke
		save 'tildeAbove' 0x303

	sketch # tildeAboveOverlay
		set-width 0
		currentGlyph.shortName = 'tilde'
		set-anchor 'above' MARK markMiddle XH markMiddle aboveMarkTop
		include : TildeShape
			ttop -- aboveMarkTop
			tbot -- aboveMarkBot + markFine / 2
			leftEnd -- (markMiddle - markExtend * 1.75)
			rightEnd -- (markMiddle + markExtend * 1.75)
			hs -- ([adviceBlackness 4.5] / 2)
		save 'tildeAboveOverlay'

	sketch # asciitilde.high
		include : TildeShape
			ttop -- [mix (XH + Accent) aboveMarkTop ((RightSB - SB) / (markExtend * 3))]
			tbot -- [mix (XH + Accent) (aboveMarkBot + markFine / 2) ((RightSB - SB) / (markExtend * 3))]
			leftEnd -- SB
			rightEnd -- RightSB
			hs -- (OperatorStroke / 2)
		save 'asciitilde.high'

	sketch # overlaytilde
		local t [mix (XH + Accent) aboveMarkTop ((RightSB - SB) / (markExtend * 3))]
		local b [mix (XH + Accent) (aboveMarkBot + markFine / 2) ((RightSB - SB) / (markExtend * 3))]
		include : TildeShape
			ttop -- t
			tbot -- b
			leftEnd  -- [mix 0 SB (1/3)]
			rightEnd -- [mix Width RightSB (1/3)]
			hs -- ([adviceBlackness 4.5] / 2)
		include : Realign Middle [mix t b (1/2)] Middle symbolMid
		save 'overlaytilde'

	sketch
		set-width 0
		set-anchor 'above' MARK markMiddle XH markMiddle aboveMarkTop

		local m [mix aboveMarkBot aboveMarkTop 0.4]
		local ttop [mix m aboveMarkTop 0.7]
		local tbot [mix m (aboveMarkBot + markFine / 2) 0.7]
		local fine : [adviceBlackness 4.5] / 2

		include : TildeShape
			ttop -- ttop
			tbot -- tbot
			leftEnd -- (markMiddle - markExtend * 1.5)
			rightEnd -- (markMiddle + markExtend * 1.5)
			hs -- fine

		branch
			include : dispiro
				widths.center (fine * 2)
				flat (markMiddle + markExtend * 0.2) [mix tbot ttop 1.5]
				curl (markMiddle - markExtend * 0.2) [mix ttop tbot 1.5]
			save 'tildeSlashAbove' 0x34A

		branch
			local r : 0.75 * DotRadius * fine / HalfStroke
			include : DotAt markMiddle [mix tbot ttop 1.5] r
			include : DotAt markMiddle [mix ttop tbot 1.5] r
			save 'tildedotdotAbove' 0x34B

	sketch
		set-width 0
		set-anchor 'above' MARK markMiddle XH markMiddle aboveMarkTop

		local m aboveMarkBot
		local ttop [mix m aboveMarkTop 0.7]
		local tbot [mix m (aboveMarkBot + markFine / 2) 0.7]

		include : TildeShape
			ttop -- ttop
			tbot -- tbot
			leftEnd -- (markMiddle - markExtend * 1.5)
			rightEnd -- (markMiddle + markExtend * 1.5)
			hs -- ([adviceBlackness 4.5] / 2)
		local k : branch

		branch
			local shift : (ttop - tbot) * 1.2
			set currentGlyph.anchors {.}
			apply-transform : Upright
			apply-transform : Translate 0 shift
			apply-transform : Italify
			include k
			apply-transform : Upright
			apply-transform : Translate 0 (-0.5 * shift)
			apply-transform : Italify
			set-anchor 'above' MARK markMiddle XH markMiddle aboveMarkTop
			save 'dblTildeAbove' 0x34C

	sketch # macronAbove
		set-width 0
		currentGlyph.shortName = 'macron'
		set-anchor 'above' MARK markMiddle XH markMiddle aboveMarkTop

		local leftEnd (markMiddle - markExtend * 1.5)
		local rightEnd (markMiddle + markExtend * 1.5)

		include : dispiro
			flat leftEnd (XH + Accent) [widths markHalfStroke markHalfStroke]
			curl rightEnd (XH + Accent)

		save 'macronAbove' 0x304

	sketch # overlineAbove
		set-width 0
		currentGlyph.shortName = 'overline'
		set-anchor 'above' MARK markMiddle XH markMiddle aboveMarkTop

		include : dispiro
			flat (SB - Width) (XH + Accent) [widths markHalfStroke markHalfStroke]
			curl (RightSB - Width) (XH + Accent)

		save 'overlineAbove' 0x305

	sketch # dblOverlineAbove
		set-width 0
		set-anchor 'above' MARK markMiddle XH markMiddle aboveMarkTop

		local boxsw : Math.min (markFine * 2) ((aboveMarkTop - aboveMarkBot) / 3)

		include : HBarBottom (SB - Width) (RightSB - Width) aboveMarkBot boxsw
		include : HBarTop (SB - Width) (RightSB - Width) aboveMarkTop boxsw

		save 'dblOverlineAbove' 0x33F

	sketch # breveAbove
		set-width 0
		currentGlyph.shortName = 'breve'
		set-anchor 'above' MARK markMiddle XH markMiddle aboveMarkTop

		local leftEnd (markMiddle - markExtend * 1.2)
		local rightEnd (markMiddle + markExtend * 1.2)

		include : dispiro
			g4.down.start leftEnd aboveMarkTop [widths.heading markHalfStroke markHalfStroke Downward]
			arcvh
			g4.right.mid markMiddle (aboveMarkBot + markHalfStroke) [heading Rightward]
			archv
			g4.up.end rightEnd aboveMarkTop [heading Upward]

		save 'breveAbove' 0x306

	sketch # archAbove
		set-width 0
		currentGlyph.shortName = 'arch'
		set-anchor 'above' MARK markMiddle XH markMiddle aboveMarkTop

		local leftEnd (markMiddle - markExtend * 1.2)
		local rightEnd (markMiddle + markExtend * 1.2)

		include : dispiro
			g4.up.start leftEnd aboveMarkBot [widths.heading markHalfStroke markHalfStroke Upward]
			arcvh
			g4.right.mid markMiddle (aboveMarkTop - markHalfStroke) [heading Rightward]
			archv
			g4.down.end rightEnd aboveMarkBot [heading Downward]

		save 'archAbove' 0x311

	sketch # hookAbove
		set-width 0
		currentGlyph.shortName = 'hook'
		set-anchor 'above' MARK markMiddle XH markMiddle aboveMarkTop

		local fine : Math.min markFine ((aboveMarkTop - aboveMarkBot) * 0.2)

		local hookBot (aboveMarkBot - fine / 2)
		local hookTop ([mix aboveMarkBot aboveMarkTop 0.9] + fine / 2)
		include : dispiro
			widths.lhs (fine * 2)
			flat (markMiddle - fine * HVContrast) hookBot [heading Rightward]
			curl (markMiddle + fine * 0.4) hookBot [heading Rightward]
			archv
			g4.up.mid (markMiddle + markExtend - O) [mix hookBot hookTop (SmoothB / (SmoothB + SmoothA))] [heading Upward]
			arcvh
			flat (markMiddle + fine * 0.4) hookTop [heading Leftward]
			curl (markMiddle - markExtend + fine) hookTop [heading Leftward]

		save 'hookAbove' 0x309

	sketch # doubleGraveAbove
		set-width 0
		currentGlyph.shortName = 'dblgrave'
		set-anchor 'above' MARK markMiddle XH markMiddle aboveMarkTop

		local m1 : markMiddle - markExtend * 0.85
		local m2 : markMiddle + markExtend * 0.85
		include : dispiro
			flat (m1 + markStress) aboveMarkBot [widths markFine markFine]
			curl (m1 - markExtend) aboveMarkTop [widths markStress markStress]
		include : dispiro
			flat (m2 + markStress) aboveMarkBot [widths markFine markFine]
			curl (m2 - markExtend) aboveMarkTop [widths markStress markStress]

		save 'doubleGraveAbove' 0x30F

	sketch # doubleAcuteAbove
		set-width 0
		currentGlyph.shortName = 'dblacute'
		set-anchor 'above' MARK markMiddle XH markMiddle aboveMarkTop

		local m1 : markMiddle - markExtend * 0.85
		local m2 : markMiddle + markExtend * 0.85
		include : dispiro
			flat (m1 - markStress) aboveMarkBot [widths markFine markFine]
			curl (m1 + markExtend) aboveMarkTop [widths markStress markStress]
		include : dispiro
			flat (m2 - markStress) aboveMarkBot [widths markFine markFine]
			curl (m2 + markExtend) aboveMarkTop [widths markStress markStress]

		save 'doubleAcuteAbove' 0x30B

	sketch # commaAbove
		set-width 0
		currentGlyph.shortName = 'comma'
		set-anchor 'above' MARK markMiddle XH markMiddle aboveMarkTop

		local radius commaAboveRadius
		include : Ring (aboveMarkTop + commaOvershoot) (aboveMarkTop - radius * 2 + commaOvershoot) (markMiddle - radius) (markMiddle + radius)
		include : dispiro
			widths.rhs : Math.min radius (markFine * [linreg 16 2 90 1.75 (markHalfStroke * 2)])
			straight.down.start (markMiddle + radius) (aboveMarkTop - radius + commaOvershoot)
			quadcontrols 0 0.6
			g4   [mix markMiddle (markMiddle - radius) 0.2] (aboveMarkBot - radius - commaOvershoot2)
		apply-transform : Upright
		apply-transform : Translate 0 (DotRadius * 0.3)
		apply-transform : Italify

		save 'commaAbove' 0x313

	sketch # turnCommaAbove
		set-width 0
		currentGlyph.shortName = 'turnComma'
		include : refer-glyph "commaAbove"
		include : FlipAround markMiddle ([mix aboveMarkTop (aboveMarkBot - commaAboveRadius) 0.5] + (DotRadius * 0.3) + commaOvershoot / 2)
		set-anchor 'above' MARK markMiddle XH markMiddle aboveMarkTop

		save 'turnCommaAbove' 0x312

	sketch # revCommaAbove
		set-width 0
		currentGlyph.shortName = 'revComma'
		set-anchor 'above' MARK markMiddle XH markMiddle aboveMarkTop

		local radius commaAboveRadius
		include : Ring (aboveMarkTop + commaOvershoot) (aboveMarkTop - radius * 2 + commaOvershoot) (markMiddle - radius) (markMiddle + radius)
		include : dispiro
			widths.lhs : Math.min radius (markFine * [linreg 16 2 90 1.75 (markHalfStroke * 2)])
			straight.down.start (markMiddle - radius) (aboveMarkTop - radius + commaOvershoot)
			quadcontrols 0 0.6
			g4   [mix markMiddle (markMiddle + radius) 0.2] (aboveMarkBot - radius - commaOvershoot2)
		apply-transform : Upright
		apply-transform : Translate 0 (DotRadius * 0.3)
		apply-transform : Italify

		save 'revCommaAbove' 0x314

	sketch # barAbove
		set-width 0
		set-anchor 'above' MARK markMiddle XH markMiddle aboveMarkTop
		include : VBar markMiddle aboveMarkBot aboveMarkTop (markHalfStroke * 2)

		save 'barAbove' 0x30D

	sketch # dblBarAbove
		set-width 0
		set-anchor 'above' MARK markMiddle XH markMiddle aboveMarkTop
		include : VBar (markMiddle - markExtend * 0.75) aboveMarkBot aboveMarkTop (markHalfStroke * 2)
		include : VBar (markMiddle + markExtend * 0.75) aboveMarkBot aboveMarkTop (markHalfStroke * 2)

		save 'dblBarAbove' 0x30E

	sketch # bridgeAbove
		set-width 0
		set-anchor 'above' MARK markMiddle XH markMiddle aboveMarkTop

		include : VBar (markMiddle - markExtend) aboveMarkBot aboveMarkTop (markFine * 2)
		include : VBar (markMiddle + markExtend) aboveMarkBot aboveMarkTop (markFine * 2)
		include : HBarTop (markMiddle - markExtend) (markMiddle + markExtend) aboveMarkTop (markFine * 2)

		save 'bridgeAbove' 0x346

	sketch # yerikAbove
		set-width 0
		set-anchor 'above' MARK markMiddle XH markMiddle aboveMarkTop
		include : dispiro
			widths.center (markFine * 2)
			g2 (markMiddle - markFine * 0.5) aboveMarkBot [heading Upward]
			alsoThruThem {{0.9 0.36} {0.1 0.64}} [heading Upward]
			g2 (markMiddle + markFine * 0.5) aboveMarkTop  [heading Upward]

		save 'yerikAbove' 0x33E

	sketch # candrabinduAbove
		set-width 0
		local fine : adviceBlackness 6.5
		local yc : XH + Accent
		local radius : Math.max (markExtend - DotRadius) (fine * 1.35)
		include : dispiro
			widths.rhs : Math.min (markHalfStroke * 2) (fine * 1.25)
			g4.down.start (markMiddle - radius) yc [heading Downward]
			arcvh
			g4.right.mid markMiddle (yc - radius)
			archv
			g4.up.end (markMiddle + radius) yc [heading Upward]
		include : DotAt markMiddle (XH + Accent) fine
		apply-transform : Upright
		apply-transform : Translate 0 (fine * 0.5)
		apply-transform : Italify
		set-anchor 'above' MARK markMiddle XH markMiddle aboveMarkTop
		save 'candrabinduAbove' 0x310

		include : FlipAround markMiddle (XH + Accent)
		save 'turncandrabinduAbove' 0x352

	sketch # variaAbove
		set-width 0
		set-anchor 'above' MARK markMiddle XH markMiddle aboveMarkTop

		include : dispiro
			flat (markMiddle + markStress) (aboveMarkBot - markFine * 0.5) [widths markFine markFine]
			curl (markMiddle - markExtend * 0.5) (aboveMarkTop + markStress * 0.25) [widths markStress markStress]

		save 'variaAbove' 0x340

	sketch # oxiaAbove
		set-width 0
		set-anchor 'above' MARK markMiddle XH markMiddle aboveMarkTop

		include : dispiro
			flat (markMiddle - markStress) (aboveMarkBot - markFine * 0.5) [widths markFine markFine]
			curl (markMiddle + markExtend * 0.5) (aboveMarkTop + markStress * 0.25) [widths markStress markStress]

		save 'oxiaAbove' 0x341

	sketch # perispomeniAbove
		set-width 0
		currentGlyph.shortName = 'perisp'
		include : refer-glyph "archAbove"
		set-anchor 'above' MARK markMiddle XH markMiddle aboveMarkTop

		save 'perispomeniAbove' 0x342
	alias 'koronisAbove' 0x343 'commaAbove'

	sketch # crossAbove
		set-width 0
		set-anchor 'above' MARK markMiddle XH markMiddle aboveMarkTop

		include : dispiro
			flat (markMiddle - markExtend) aboveMarkTop [widths markFine markFine]
			curl (markMiddle + markExtend) aboveMarkBot
		include : dispiro
			flat (markMiddle - markExtend) aboveMarkBot [widths markFine markFine]
			curl (markMiddle + markExtend) aboveMarkTop
		save 'crossAbove' 0x33D

	sketch # greaterAbove
		set-width 0
		set-anchor 'above' MARK markMiddle XH markMiddle aboveMarkTop
		local top aboveMarkTop
		local bot aboveMarkBot
		local exp : Math.sqrt : 1 + (top - bot) / (markExtend) * (top - bot) / (markExtend)
		include : dispiro
			widths.center : markFine * 2
			flat (markMiddle + markExtend) top
			curl (markMiddle - markExtend) [mix top bot 0.5] [widths.heading (markFine / 2 * exp) (markFine / 2 * exp) Leftward]

		include : dispiro
			widths.center : markFine * 2
			flat (markMiddle + markExtend) bot
			curl (markMiddle - markExtend) [mix top bot 0.5] [widths.heading (markFine / 2 * exp) (markFine / 2 * exp) Leftward]

		save 'lessAbove' 0x1DFE

		include : FlipAround markMiddle [mix top bot 0.5]
		save 'greaterAbove' 0x350

	### Below marks
	sketch # cedillaBelow
		set-width 0
		set-anchor 'below' MARK markMiddle 0 markMiddle belowMarkBot

		local fine : Math.min markHalfStroke ((belowMarkTop - belowMarkBot) * 0.25)

		local cedillaTop (belowMarkTop + fine * 0.85)
		local cedillaBot belowMarkBot
		include : dispiro
			flat (markMiddle - fine * HVContrast) cedillaTop [widths.heading 0 (fine * 2) Rightward]
			curl markMiddle cedillaTop [heading Rightward]
			archv
			g4   (markMiddle + markExtend - O) [mix cedillaTop cedillaBot 0.5] [heading Downward]
			arcvh
			flat markMiddle cedillaBot [heading Leftward]
			curl (markMiddle - markExtend) cedillaBot [heading Leftward]
		include : VBar markMiddle 0 (cedillaTop - fine) (fine * 2)

		save 'cedillaBelow' 0x327

	define [OgonekBelowShape] : glyph-construction
		local fine : markHalfStroke * [linreg 16 1 90 0.25 (markHalfStroke * 2)]
		local ogonekBot : [mix belowMarkTop belowMarkBot 0.75] + markStress * 2
		local ogonekLeft : markMiddle + ogonekBot * 0.5
		local ogonekRight : markMiddle + markExtend * 0.85
		include : dispiro
			g4.left.start markMiddle O [widths 0 (fine * 2)]
			#archv
			g4   ogonekLeft [mix O ogonekBot 0.5] [widths 0 ([mix fine markStress 0.75] * 2)]
			#arcvh
			flat          (markMiddle + markExtend * 0.25) ogonekBot [widths 0 (markStress * 2)]
			curl          ogonekRight ogonekBot [heading Rightward]

	sketch # ogonekBelow
		set-width 0
		include : OgonekBelowShape
		set-anchor 'below' MARK markMiddle 0 markMiddle belowMarkBot
		save 'ogonekBelow' 0x328

	sketch # ogonekAbove
		set-width 0
		include : OgonekBelowShape
		include : FlipAround markMiddle (XH / 2)
		set-anchor 'above' MARK markMiddle XH markMiddle aboveMarkTop
		save 'ogonekAbove' 0x1DCE

	sketch # ogonekTR
		set-width 0
		include : refer-glyph "ogonekBelow"
		local ogonekBot : [mix belowMarkTop belowMarkBot 0.75] + markStress * 2
		local ogonekRight : markMiddle + markExtend * 0.85
		set-anchor 'trailing' MARK markMiddle 0 ogonekRight ogonekBot

		save 'ogonekTR'

	sketch # iotaBelow
		set-width 0
		set currentGlyph.shortName 'iota'
		set-anchor 'below' MARK markMiddle 0 markMiddle belowMarkBot

		include : VBar markMiddle belowMarkBot belowMarkTop (markHalfStroke * 2)

		save 'iotaBelow' 0x345

	sketch # iotaLF
		set-width 0
		set-anchor 'lf' MARK markMiddle 0 markMiddle belowMarkBot
		include : VBar markMiddle belowMarkBot belowMarkTop (markHalfStroke * 2)

		save 'iotaLF'

	sketch # uptackBelow
		set-width 0
		set-anchor 'below' MARK markMiddle 0 markMiddle belowMarkBot

		include : VBar markMiddle belowMarkBot belowMarkTop (markFine * 2)
		include : HBarBottom (markMiddle - markExtend) (markMiddle + markExtend) belowMarkBot (markFine * 2)

		save 'uptackBelow' 0x31D

	sketch # downtackBelow
		set-width 0
		set-anchor 'below' MARK markMiddle 0 markMiddle belowMarkBot

		include : VBar markMiddle belowMarkBot belowMarkTop (markFine * 2)
		include : HBarTop (markMiddle - markExtend) (markMiddle + markExtend) belowMarkTop (markFine * 2)

		save 'downtackBelow' 0x31E

	sketch # lefttackBelow
		set-width 0
		set-anchor 'below' MARK markMiddle 0 markMiddle belowMarkBot

		include : VBar (markMiddle + markExtend) belowMarkBot belowMarkTop (markFine * 2)
		include : HBar (markMiddle - markExtend) (markMiddle + markExtend) [mix belowMarkTop belowMarkBot 0.5] (markFine * 2)

		save 'lefttackBelow' 0x318

	sketch # righttackBelow
		set-width 0
		set-anchor 'below' MARK markMiddle 0 markMiddle belowMarkBot

		include : VBar (markMiddle - markExtend) belowMarkBot belowMarkTop (markFine * 2)
		include : HBar (markMiddle - markExtend) (markMiddle + markExtend) [mix belowMarkTop belowMarkBot 0.5] (markFine * 2)

		save 'righttackBelow' 0x319

	sketch # leftAngleBelow
		set-width 0
		set-anchor 'below' MARK markMiddle 0 markMiddle belowMarkBot

		include : VBar (markMiddle + markExtend) belowMarkBot belowMarkTop (markFine * 2)
		include : HBarTop (markMiddle - markExtend) (markMiddle + markExtend) belowMarkTop (markFine * 2)

		save 'leftAngleBelow' 0x349

	sketch # plusBelow
		set-width 0
		set-anchor 'below' MARK markMiddle 0 markMiddle belowMarkBot

		include : VBar markMiddle belowMarkBot belowMarkTop (markFine * 2)
		include : HBar (markMiddle - markExtend) (markMiddle + markExtend) [mix belowMarkTop belowMarkBot 0.5] (markFine * 2)

		save 'plusBelow' 0x31F

	sketch # minusBelow
		set-width 0
		set-anchor 'below' MARK markMiddle 0 markMiddle belowMarkBot

		include : VBar (markMiddle - markExtend) belowMarkBot belowMarkTop (markFine * 2)
		include : VBar (markMiddle + markExtend) belowMarkBot belowMarkTop (markFine * 2)
		include : HBar (markMiddle - markExtend) (markMiddle + markExtend) [mix belowMarkTop belowMarkBot 0.5] (markFine * 2)

		save 'minusBelow' 0x320

	sketch # bridgeBelow
		set-width 0
		set-anchor 'below' MARK markMiddle 0 markMiddle belowMarkBot

		include : VBar (markMiddle - markExtend) belowMarkBot belowMarkTop (markFine * 2)
		include : VBar (markMiddle + markExtend) belowMarkBot belowMarkTop (markFine * 2)
		include : HBarTop (markMiddle - markExtend) (markMiddle + markExtend) belowMarkTop (markFine * 2)

		save 'bridgeBelow' 0x32A

	sketch # boxBelow
		set-width 0
		set-anchor 'below' MARK markMiddle 0 markMiddle belowMarkBot

		local boxsw : Math.min (markFine * 2) ((belowMarkTop - belowMarkBot) / 3)

		include : VBar (markMiddle - markExtend) belowMarkBot belowMarkTop (markFine * 2)
		include : VBar (markMiddle + markExtend) belowMarkBot belowMarkTop (markFine * 2)
		include : HBarBottom (markMiddle - markExtend) (markMiddle + markExtend) belowMarkBot boxsw
		include : HBarTop (markMiddle - markExtend) (markMiddle + markExtend) belowMarkTop boxsw

		save 'boxBelow' 0x33B

	sketch # equalBelow
		set-width 0
		set-anchor 'below' MARK markMiddle 0 markMiddle belowMarkBot

		local boxsw : Math.min (markFine * 2) ((belowMarkTop - belowMarkBot) / 3)

		include : HBarBottom (markMiddle - markExtend) (markMiddle + markExtend) belowMarkBot boxsw
		include : HBarTop (markMiddle - markExtend) (markMiddle + markExtend) belowMarkTop boxsw

		save 'equalBelow' 0x347

	sketch # dblBreveBelow
		set-width 0
		set-anchor 'below' MARK markMiddle 0 markMiddle belowMarkBot

		local hsw : [adviceBlackness 3.5] / Stroke * markHalfStroke
		local extend : (belowMarkTop - belowMarkBot - markHalfStroke) * 1.25

		include : dispiro
			g4.down.start (markMiddle - extend) belowMarkTop [widths.heading hsw hsw Downward]
			arcvh
			g4.right.mid  [mix markMiddle (markMiddle - extend) 0.5] (belowMarkBot + hsw) [heading Rightward]
			archv
			g4.up.end     markMiddle belowMarkTop [heading Upward]
		include : dispiro
			g4.down.start markMiddle belowMarkTop [widths.heading hsw hsw Downward]
			arcvh
			g4.right.mid  [mix markMiddle (markMiddle + extend) 0.5] (belowMarkBot + hsw) [heading Rightward]
			archv
			g4.up.end     (markMiddle + extend) belowMarkTop [heading Upward]

		save 'dblBreveBelow' 0x32B

	sketch # dblArchBelow
		set-width 0
		include : refer-glyph "dblBreveBelow"
		include : FlipAround markMiddle [mix belowMarkTop belowMarkBot 0.5]
		set-anchor 'below' MARK markMiddle 0 markMiddle belowMarkBot

		save 'dblArchBelow' 0x33C

	sketch # leftHalfCircleBelow
		set-width 0
		set-anchor 'below' MARK markMiddle 0 markMiddle belowMarkBot
		include : dispiro
			g4.left.start markMiddle belowMarkTop [widths.heading markFine markFine Leftward]
			archv
			g4.down.mid   (markMiddle - (belowMarkTop - belowMarkBot) / 2) [mix belowMarkTop belowMarkBot 0.5] [heading Downward]
			arcvh
			g4.right.end  markMiddle belowMarkBot [heading Rightward]
		apply-transform : Translate ((belowMarkTop - belowMarkBot) / 4) 0

		save 'leftHalfCircleBelow' 0x31C

	sketch # rightHalfCircleBelow
		set-width 0
		include : refer-glyph "leftHalfCircleBelow"
		include : FlipAround markMiddle [mix belowMarkTop belowMarkBot 0.5]
		set-anchor 'below' MARK markMiddle 0 markMiddle belowMarkBot

		save 'rightHalfCircleBelow' 0x339

	sketch # leftHalfCircleAbove
		set-width 0
		set-anchor 'above' MARK markMiddle XH markMiddle aboveMarkTop
		include : refer-glyph "rightHalfCircleBelow"
		include : FlipAround markMiddle (XH / 2)

		save 'leftHalfCircleAbove' 0x351

	sketch # rightHalfCircleAbove
		set-width 0
		set-anchor 'above' MARK markMiddle XH markMiddle aboveMarkTop
		include : refer-glyph "leftHalfCircleBelow"
		include : FlipAround markMiddle (XH / 2)

		save 'rightHalfCircleAbove' 0x357
	# Turned below marks
	sketch # graveBelow
		set-width 0
		set-anchor 'below' MARK markMiddle 0 markMiddle belowMarkBot
		include : refer-glyph "graveAbove"
		include : FlipAround markMiddle (XH / 2)

		save 'graveBelow' 0x316

	sketch # acuteBelow
		set-width 0
		set-anchor 'below' MARK markMiddle 0 markMiddle belowMarkBot
		include : refer-glyph "acuteAbove"
		include : FlipAround markMiddle (XH / 2)

		save 'acuteBelow' 0x317

	sketch # dotBelow
		set-width 0
		set-anchor 'below' MARK markMiddle 0 markMiddle belowMarkBot
		include : refer-glyph "dotAbove"
		include : FlipAround markMiddle (XH / 2)

		save 'dotBelow' 0x323

	sketch # dieresisBelow
		set-width 0
		set-anchor 'below' MARK markMiddle 0 markMiddle belowMarkBot
		include : refer-glyph "dieresisAbove"
		include : FlipAround markMiddle (XH / 2)

		save 'dieresisBelow' 0x324

	sketch # tildeBelow
		set-width 0
		set-anchor 'below' MARK markMiddle 0 markMiddle belowMarkBot
		include : refer-glyph "tildeAbove"
		include : FlipAround markMiddle (XH / 2)

		save 'tildeBelow' 0x330

	sketch # ringBelow
		set-width 0
		set-anchor 'below' MARK markMiddle 0 markMiddle belowMarkBot
		include : refer-glyph "ringAbove"
		include : FlipAround markMiddle (XH / 2)

		save 'ringBelow' 0x325

	sketch # macronBelow
		set-width 0
		set-anchor 'below' MARK markMiddle 0 markMiddle belowMarkBot

		include : refer-glyph "macronAbove"
		include : FlipAround markMiddle (XH / 2)

		save 'macronBelow' 0x331

	sketch # invBridgeBelow
		set-width 0
		set-anchor 'below' MARK markMiddle 0 markMiddle belowMarkBot

		include : refer-glyph "bridgeAbove"
		include : FlipAround markMiddle (XH / 2)

		save 'invBridgeBelow' 0x33A

	sketch # underlineBelow
		set-width 0
		set-anchor 'below' MARK markMiddle 0 markMiddle belowMarkBot

		include : refer-glyph "overlineAbove"
		include : FlipAround markMiddle (XH / 2)

		save 'underlineBelow' 0x332

	sketch # dblUnderlineBelow
		set-width 0
		set-anchor 'below' MARK markMiddle 0 markMiddle belowMarkBot

		include : refer-glyph "dblOverlineAbove"
		include : FlipAround markMiddle (XH / 2)

		save 'dblUnderlineBelow' 0x333

	sketch # circumflexBelow
		set-width 0
		set-anchor 'below' MARK markMiddle 0 markMiddle belowMarkBot

		include : refer-glyph "caronAbove"
		include : FlipAround markMiddle (XH / 2)

		save 'circumflexBelow' 0x32D

	sketch # caronBelow
		set-width 0
		set-anchor 'below' MARK markMiddle 0 markMiddle belowMarkBot

		include : refer-glyph "circumflexAbove"
		include : FlipAround markMiddle (XH / 2)

		save 'caronBelow' 0x32C

	sketch # breveBelow
		set-width 0
		set-anchor 'below' MARK markMiddle 0 markMiddle belowMarkBot

		include : refer-glyph "archAbove"
		include : FlipAround markMiddle (XH / 2)

		save 'breveBelow' 0x32E

	sketch # archBelow
		set-width 0
		set-anchor 'below' MARK markMiddle 0 markMiddle belowMarkBot

		include : refer-glyph "breveAbove"
		include : FlipAround markMiddle (XH / 2)

		save 'archBelow' 0x32F

	sketch # commaBelow
		set-width 0
		set-anchor 'below' MARK markMiddle 0 markMiddle belowMarkBot

		include : refer-glyph "turnCommaAbove"
		include : FlipAround markMiddle (XH / 2)

		save 'commaBelow' 0x326

	sketch # barBelow
		set-width 0
		set-anchor 'below' MARK markMiddle 0 markMiddle belowMarkBot
		include : refer-glyph "barAbove"
		include : FlipAround markMiddle (XH / 2)

		save 'barBelow' 0x329

	sketch # dblBarBelow
		set-width 0
		set-anchor 'below' MARK markMiddle 0 markMiddle belowMarkBot
		include : refer-glyph "dblBarAbove"
		include : FlipAround markMiddle (XH / 2)

		save 'dblBarBelow' 0x348

	sketch # crossBelow
		set-width 0
		set-anchor 'below' MARK markMiddle 0 markMiddle belowMarkBot

		include : refer-glyph "crossAbove"
		include : FlipAround markMiddle (XH / 2)
		save 'crossBelow' 0x353

	sketch # lessBelow
		set-width 0
		set-anchor 'below' MARK markMiddle 0 markMiddle belowMarkBot

		include : refer-glyph "greaterAbove"
		include : FlipAround markMiddle (XH / 2)

		save 'lessBelow' 0x354

	sketch # greaterBelow
		set-width 0
		set-anchor 'below' MARK markMiddle 0 markMiddle belowMarkBot

		include : refer-glyph "lessAbove"
		include : FlipAround markMiddle (XH / 2)

		save 'greaterBelow' 0x355

	sketch # greaterBelow
		set-width 0
		set-anchor 'below' MARK markMiddle 0 markMiddle belowMarkBot

		include : refer-glyph "dblRingAbove"
		include : FlipAround markMiddle (XH / 2)

		save 'dblRingBelow' 0x35a

	sketch # lrArrowBelow
		set-width 0
		local fine : [adviceBlackness 5.75] / 2
		local h : branch
			local top belowMarkTop
			local bot belowMarkBot
			local left : markMiddle - markExtend * 1.5
			local right : markMiddle - markExtend * 0.5
			local exp : Math.sqrt : 1 + (top - bot) / (2 * (right - left)) * (top - bot) / (2 * (right - left))
			include : dispiro
				widths.center : fine * 2
				flat right top
				curl left [mix top bot 0.5] [widths.heading (fine * exp) (fine * exp) Downward]

			include : dispiro
				widths.center : fine * 2
				flat right bot
				curl left [mix top bot 0.5] [widths.heading (fine * exp) (fine * exp) Upward]

		include h
		include : FlipAround markMiddle [mix belowMarkTop belowMarkBot 0.5]
		include h
		include : HBar (markMiddle - markExtend * 1.5) (markMiddle + markExtend * 1.5) [mix belowMarkTop belowMarkBot 0.5] (fine * 2)

		set-anchor 'below' MARK markMiddle 0 markMiddle belowMarkBot
		save 'lrArrowBelow' 0x34D

	sketch # upArrowBelow
		set-width 0
		local fine : [adviceBlackness 6] / 2

		local top belowMarkTop
		local bot [mix belowMarkBot belowMarkTop 0.5]
		local left : markMiddle - markExtend * 0.75
		local right : markMiddle + markExtend * 0.75
		local exp : Math.sqrt : 1 + (2 * (top - bot)) / (right - left) * (2 * (top - bot)) / (right - left)
		include : dispiro
			widths.center : fine * 2
			flat left bot
			curl [mix left right 0.5] top [widths.heading (fine * exp) (fine * exp) Rightward]

		include : dispiro
			widths.center : fine * 2
			flat right bot
			curl [mix left right 0.5] top [widths.heading (fine * exp) (fine * exp) Leftward]
		include : VBar markMiddle belowMarkBot top (fine * 2)
		set-anchor 'below' MARK markMiddle 0 markMiddle belowMarkBot
		save 'upArrowBelow' 0x34E

	# horn and angle marks
	define [HornDim attX attY overshootX overshootY yrP] : begin
		local radius commaAboveRadius
		local hornFine : Math.min radius (markFine * 1.75)
		local startX : attX + 2 * radius
		local startY : attY + yrP * radius + (aboveMarkTop - aboveMarkBot) / 2
		return : object radius hornFine startX startY

	define [HornMarkAnchor attX attY overshootX overshootY yrP] : glyph-construction
		local [object radius hornFine startX startY] : HornDim attX attY overshootX overshootY yrP
		set-anchor 'topright' MARK attX attY startX startY

	define [HornBaseAnchor attX attY overshootX overshootY yrP] : glyph-construction
		local [object radius hornFine startX startY] : HornDim attX attY overshootX overshootY yrP
		set-anchor 'topright' BASE startX startY

	define [HornShape attX attY overshootX overshootY yrP] : glyph-construction
		local [object radius hornFine startX startY] : HornDim attX attY overshootX overshootY yrP
		include : Ring (startY + radius) (startY - radius) (startX - 2 * radius) startX
		include : dispiro
			g4 startX startY [widths 0 hornFine]
			quadcontrols   0 0.75 5 important
			g4 (attX - overshootX - HalfStroke * HVContrast) (attY - overshootY - Stroke)

	sketch # horn
		set-width 0
		include : HornShape 0 XH 0 0 1
		include : HornMarkAnchor 0 XH 0 0 1
		save 'horn' 0x31B

	sketch # leftangleTR
		set-width 0
		include : VBarLeft 0 aboveMarkBot aboveMarkTop (markFine * 2)
		include : HBarTop (-markExtend * 1.5) 0 aboveMarkTop (markFine * 2)
		set-anchor 'topright' MARK 0 XH 0 aboveMarkTop

		save 'leftangleTR' 0x31A

	sketch # dotTR
		set-width 0
		include : Ring (XH + Accent + DotRadius) (XH + Accent - DotRadius) (0 - DotRadius) (0 + DotRadius) true
		set-anchor 'topright' MARK 0 XH 0 aboveMarkTop

		save 'dotTR' 0x358

	sketch # commaTR
		set-width 0
		include : refer-glyph "commaAbove"
		apply-transform : Upright
		apply-transform : Translate (RightSB - Middle - OX) (XH - aboveMarkTop - commaOvershoot)
		apply-transform : Italify
		set-anchor 'topright' MARK 0 XH 0 aboveMarkTop

		save 'commaTR' 0x315

	sketch # rtailBR
		set-width 0

		set-anchor 'bottomright' MARK 0 0 0 belowMarkBot
		include : dispiro
			widths.rhs
			flat 0 (-O) [heading Downward]
			curl 0 0 [heading Downward]
			straight.right.end (HookX - HalfStroke * HVContrast) (-Hook + HalfStroke)
		set currentGlyph.cmpPriority (-2)
		save 'rtailBR' 0x322

	sketch # ltailBR
		set-width 0

		set-anchor 'bottomright' MARK 0 0 0 belowMarkBot
		include : dispiro
			widths.rhs
			flat 0 (-O) [heading Downward]
			curl 0 0 [heading Downward]
			straight.left.end (-HookX - HalfStroke * HVContrast) (-Hook - HalfStroke)
		set currentGlyph.cmpPriority (-2)
		save 'ltailBR' 0x321

	# Overlay Marks
	sketch # tildeOver
		set-width 0
		set-anchor 'overlay' MARK markMiddle (XH / 2) markMiddle (XH / 2)
		include : refer-glyph "tildeAbove"
		apply-transform : Upright
		apply-transform : Translate 0 (XH / 2 - [mix aboveMarkTop aboveMarkBot 0.5])
		apply-transform : Italify

		save 'tildeOver' 0x334

	sketch # barOver
		set-width 0
		set-anchor 'overlay' MARK markMiddle (XH / 2) markMiddle (XH / 2)
		include : HOverlayBar (markMiddle - LongJut * 0.75) (markMiddle + LongJut * 0.75) (XH / 2)

		save 'barOver' 0x335

	sketch # longBarOver
		set-width 0
		set-anchor 'overlay' MARK markMiddle (XH / 2) markMiddle (XH / 2)
		include : HOverlayBar ([mix 0 SB 0.5] - Width) ([mix Width RightSB 0.5] - Width) (XH / 2)

		save 'longBarOver' 0xE091

	sketch # strikeThrough
		set-width 0
		set-anchor 'strike' MARK markMiddle (XH / 2) markMiddle (XH / 2)
		include : HOverlayBar (0 - Width) (0) (XH / 2)
		save 'strikeThrough' 0x0336

	sketch # shortSlashOver
		set-width 0
		set-anchor 'overlay' MARK markMiddle (XH / 2) markMiddle (XH / 2)
		include : FlatSlashShape markMiddle (XH / 2) (0.5 * OverlayStroke)

		save 'shortSlashOver' 0xE090

	sketch # arrSlashOver
		set-width 0
		local fine : 0.375 * OverlayStroke
		local dx : Width * 0.1
		local dy : Width * 0.4
		set-anchor 'slash' MARK markMiddle (XH / 2) markMiddle (XH / 2)
		include : dispiro
			flat (Middle - dx - Width) (XH / 2 - dy) [widths fine fine]
			curl (Middle + dx - Width) (XH / 2 + dy)
		save 'arrSlashOver'

	sketch # arrVStrokeOver
		include : ForceUpright
		set-width 0
		local fine : 0.375 * OverlayStroke
		local dx : Width * 0
		local dy : Width * 0.3
		set-anchor 'slash' MARK markMiddle (XH / 2) markMiddle (XH / 2)
		include : dispiro
			flat (Middle - dx - Width) (XH / 2 - dy) [widths fine fine]
			curl (Middle + dx - Width) (XH / 2 + dy)
		save 'arrVStrokeOver'

	sketch # arrDblVStrokeOver
		include : ForceUpright
		set-width 0
		local fine : 0.3 * OverlayStroke
		local dx : Width * 0
		local dy : Width * 0.3
		local gap : Math.max (fine * 2) (Width / 10)
		set-anchor 'slash' MARK markMiddle (XH / 2) markMiddle (XH / 2)
		include : dispiro
			flat (Middle - dx - Width - gap) (XH / 2 - dy) [widths fine fine]
			curl (Middle + dx - Width - gap) (XH / 2 + dy)
		include : dispiro
			flat (Middle - dx - Width + gap) (XH / 2 - dy) [widths fine fine]
			curl (Middle + dx - Width + gap) (XH / 2 + dy)
		save 'arrDblVStrokeOver'

	sketch # arrHStrokeOver
		include : ForceUpright
		set-width 0
		local fine : 0.375 * OverlayStroke
		local dx : Width * 0.3
		set-anchor 'slash' MARK markMiddle (XH / 2) markMiddle (XH / 2)
		include : dispiro
			flat (Middle - Width - dx) (XH / 2) [widths fine fine]
			curl (Middle - Width + dx) (XH / 2)
		save 'arrHStrokeOver'

	sketch # arrDblHStrokeOver
		include : ForceUpright
		set-width 0
		local fine : 0.3 * OverlayStroke
		local dx : Width * 0.3
		local gap : Math.max (fine * 2) (Width / 10)
		set-anchor 'slash' MARK markMiddle (XH / 2) markMiddle (XH / 2)
		include : dispiro
			flat (Middle - Width - dx) (XH / 2 - gap) [widths fine fine]
			curl (Middle - Width + dx) (XH / 2 - gap)
		include : dispiro
			flat (Middle - Width - dx) (XH / 2 + gap) [widths fine fine]
			curl (Middle - Width + dx) (XH / 2 + gap)
		save 'arrDblHStrokeOver'

	sketch # slashOver
		set-width 0
		local fine : 0.375 * OverlayStroke
		set-anchor 'slash' MARK markMiddle (XH / 2) markMiddle (XH / 2)
		include : dispiro
			flat (SB - O * 3 + fine - Width) (XH * (-0.1)) [widths fine fine]
			curl (RightSB + O * 3 - fine - Width) (XH * 1.1)

		save 'slashOver' 0x337

	sketch # longSlashOver
		set-width 0
		local fine : 0.375 * OverlayStroke
		set-anchor 'slash' MARK markMiddle (XH / 2) markMiddle (XH / 2)
		include : dispiro
			flat (SB - O * 3 + fine - Width) (XH * 0.5 - CAP * 0.6) [widths fine fine]
			curl (RightSB + O * 3 - fine - Width) (XH * 0.5 + CAP * 0.6)
		save 'longSlashOver' 0x338

	local tieLeft [mix 0 markMiddle 1.25]
	local tieRight (-tieLeft)
	sketch # tieAbove
		set-width 0
		include : dispiro
			widths.rhs (markHalfStroke * 2)
			g4 tieLeft aboveMarkBot
			quadcontrols  0.5 1
			g4.right.mid  0 aboveMarkTop [heading Rightward]
			quadcontrols  0.5 0
			g4 tieRight aboveMarkBot
		apply-transform : Upright
		apply-transform : Translate 0 (CAP - XH)
		apply-transform : Italify
		save 'tieAbove' 0x361

	sketch # turnTieAbove
		set-width 0
		include : dispiro
			widths.lhs (markHalfStroke * 2)
			g4 tieLeft aboveMarkTop
			quadcontrols  0.5 1
			g4.right.mid  0 aboveMarkBot [heading Rightward]
			quadcontrols  0.5 0
			g4 tieRight aboveMarkTop
		apply-transform : Upright
		apply-transform : Translate 0 (CAP - XH)
		apply-transform : Italify
		save 'turnTieAbove' 0x35D
	turned 'tieBelow' 0x35C 'tieAbove' 0 (XH / 2)

	sketch # overlineTieAbove
		set-width 0
		include : dispiro
			widths.center (markHalfStroke * 2)
			flat tieLeft (XH + Accent)
			curl tieRight (XH + Accent)
		apply-transform : Upright
		apply-transform : Translate 0 (CAP - XH)
		apply-transform : Italify
		save 'overlineTieAbove' 0x35E
	composite 'underlineTieBelow' [refer-glyph 'overlineTieAbove'] [FlipAround 0 (XH / 2)] [into-unicode 0x35F]

	sketch # arrowTieBelow
		set-width 0
		local fine markFine
		local h : branch
			local top (Descender - Accent + (belowMarkTop - belowMarkBot) / 2 * 1.5)
			local bot (Descender - Accent - (belowMarkTop - belowMarkBot) / 2 * 1.5)
			local left : tieRight - markExtend * 1.5
			local right tieRight
			local exp : Math.sqrt : 1 + (top - bot) / (2 * (right - left)) * (top - bot) / (2 * (right - left))
			include : dispiro
				widths.center : fine * 2
				flat left top
				curl right [mix top bot 0.5] [widths.heading (fine * exp) (fine * exp) Downward]
			include : dispiro
				widths.center : fine * 2
				flat left bot
				curl right [mix top bot 0.5] [widths.heading (fine * exp) (fine * exp) Upward]

		include h
		include : HBar tieLeft tieRight (Descender - Accent) (fine * 2)
		save 'arrowTieBelow' 0x362

	sketch # tildeTieAbove
		set-width 0
		include : TildeShape
			ttop -- aboveMarkTop + (CAP - XH)
			tbot -- aboveMarkBot + (CAP - XH)
			leftEnd -- tieLeft
			rightEnd -- tieRight
			hs -- markHalfStroke

		save 'tildeTieAbove' 0x360

	define [GreekLRDoubleMark id unicode leftGlyph rightGlyph] : begin
		sketch # Combining double mark
			set-width 0
			local k : -Width * 0.15

			include leftGlyph
			apply-transform : Translate (2 * k) 0
			include rightGlyph
			apply-transform : Translate (0 - k) 0

			set-anchor 'above' MARK markMiddle XH markMiddle aboveMarkTop
			set currentGlyph.cmpPriority 50
			save id

		sketch # Spaced double mark
			include [refer-glyph 'markBaseSpace'] AS_BASE
			set-width [query-glyph 'markBaseSpace'].advanceWidth
			include [refer-glyph id]
			save ('spaced' + id) unicode

	GreekLRDoubleMark 'psilivaria' 0x1FCD [refer-glyph 'commaAbove'] [refer-glyph 'variaAbove']
	GreekLRDoubleMark 'psilioxia'  0x1FCE [refer-glyph 'commaAbove'] [refer-glyph 'oxiaAbove']
	GreekLRDoubleMark 'dasiavaria' 0x1FDD [refer-glyph 'revCommaAbove'] [refer-glyph 'variaAbove']
	GreekLRDoubleMark 'dasiaoxia'  0x1FDE [refer-glyph 'revCommaAbove'] [refer-glyph 'oxiaAbove']

	local yc : aboveMarkTop - commaAboveRadius + DotRadius * 0.3 + commaOvershoot

	sketch # psiliperispomeni
		set-width 0
		include : refer-glyph "commaAbove"
		local radius : Math.max (markExtend - commaAboveRadius) (commaAboveRadius * 1.25)
		include : dispiro
			widths.lhs : Math.min (markHalfStroke * 2) ([adviceBlackness 6.5] * 1.25)
			g4.up.start (markMiddle - radius) yc [heading Upward]
			arcvh
			g4.right.mid markMiddle (yc + radius)
			archv
			g4.down.end (markMiddle + radius) yc [heading Downward]
		set-anchor 'above' MARK markMiddle XH markMiddle (aboveMarkTop + markHalfStroke * 2)
		set currentGlyph.cmpPriority 50
		save 'psiliperispomeni'

	sketch # spaced_psiliperispomeni
		include [refer-glyph 'markBaseSpace'] AS_BASE
		set-width [query-glyph 'markBaseSpace'].advanceWidth
		include : refer-glyph "psiliperispomeni"

		save 'spaced_psiliperispomeni' 0x1FCF

	sketch # dasiaperispomeni
		set-width 0
		include : refer-glyph "revCommaAbove"
		local radius : Math.max (markExtend - commaAboveRadius) (commaAboveRadius * 1.25)
		include : dispiro
			widths.lhs : Math.min (markHalfStroke * 2) ([adviceBlackness 6.5] * 1.25)
			g4.up.start (markMiddle - radius) yc [heading Upward]
			arcvh
			g4.right.mid markMiddle (yc + radius)
			archv
			g4.down.end (markMiddle + radius) yc [heading Downward]
		set-anchor 'above' MARK markMiddle XH markMiddle (aboveMarkTop + markHalfStroke * 2)
		set currentGlyph.cmpPriority 50
		save 'dasiaperispomeni'

	sketch # spaced_dasiaperispomeni
		include [refer-glyph 'markBaseSpace'] AS_BASE
		set-width [query-glyph 'markBaseSpace'].advanceWidth
		include : refer-glyph "dasiaperispomeni"
		save 'spaced_dasiaperispomeni' 0x1FDF

	glyph-block-export markExtend markHalfStroke markStress markFine markMiddle markDotsRadius aboveMarkTop aboveMarkBot aboveMarkMid belowMarkBot belowMarkTop commaOvershoot commaOvershoot2 commaAboveRadius TildeShape HornShape HornMarkAnchor HornBaseAnchor